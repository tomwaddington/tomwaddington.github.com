<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tom Waddington]]></title>
  <link href="http://tomwaddington.github.com/atom.xml" rel="self"/>
  <link href="http://tomwaddington.github.com/"/>
  <updated>2012-07-07T19:51:30+01:00</updated>
  <id>http://tomwaddington.github.com/</id>
  <author>
    <name><![CDATA[Tom Waddington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Facebook wants to share your purchases]]></title>
    <link href="http://tomwaddington.github.com/blog/2012/07/03/facebook-wants-to-share-your-purchases/"/>
    <updated>2012-07-03T18:11:00+01:00</updated>
    <id>http://tomwaddington.github.com/blog/2012/07/03/facebook-wants-to-share-your-purchases</id>
    <content type="html"><![CDATA[<p>After <a href="http://tom.waddington.me/blog/2012/06/27/facebook-want/">finding the Facebook Want button</a> last week, I decided to take a deeper look into the code behind it. What&#8217;s clear, is that Facebook have big plans for social commerce - and for sharing your purchases.</p>

<p><img src="http://tomwaddington.github.com/images/social_commerce.jpg" title="Social Commerce" alt="Social Context Screenshot" /></p>

<p>Though the Want button itself doesn&#8217;t work, I found it is still possible to Want an object using the Graph API. Sending a post request to <code>/me/wants</code> with a product parameter generates a stream story, and updates the want button counter.</p>

<p><img src="http://tomwaddington.github.com/images/stream_story_wants.jpg" title="A stream story from a Want" alt="Want Stream Story" /></p>

<p>The source code from the stream story gives a few more clues as to Facebook&#8217;s strategy for products. The Want/Unwant action link even includes &#8216;socialcommerce&#8217;</p>

<p><img class="right" src="http://tomwaddington.github.com/images/product_old.jpg" title="Product old" ></p>

<p>It&#8217;s clear that Facebook are working on a new OpenGraph representation of products. They&#8217;re even calling the current Product object &#8216;Product Old&#8217;.</p>

<p>I decided to look for the new model in the schema.</p>

<p><a href="http://graph.facebook.com/schema/og/fb/ogproduct">Nothing too exciting</a>, until I looked at the <a href="http://graph.facebook.com/schema/opengraphaction/fb/ogproduct">actions associated with the object</a>.</p>

<p><img class="right" src="http://tomwaddington.github.com/images/product_purchased.jpg" title="Product purchased" ></p>

<p>The <code>product.purchased</code> action will share purchases (or donations, it seems) of products, or items in Facebook games.</p>

<p>It&#8217;s possible to view the configuration page for the action - it&#8217;s similar to other built-in actions. However, other API pages for the new objects and actions give a &#8216;Whitelist Only&#8217; error.</p>

<p><img src="http://tomwaddington.github.com/images/configuration.jpg" title="Product Purchased Configuration" ></p>

<p>It appears that product wants and purchases will be accessible similar to other user actions - music, news and video. I&#8217;ll keep investigating Facebook&#8217;s social commerce plans and keep you updated!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Social Context]]></title>
    <link href="http://tomwaddington.github.com/blog/2012/06/29/facebook-social-context/"/>
    <updated>2012-06-29T15:45:00+01:00</updated>
    <id>http://tomwaddington.github.com/blog/2012/06/29/facebook-social-context</id>
    <content type="html"><![CDATA[<p>Another unreleased <a href="http://developers.facebook.com/plugins">social plugin</a> is called Social Context.</p>

<p><img src="http://tomwaddington.github.com/images/social_context.jpg" title="Social Context" alt="Social Context Screenshot" /></p>

<p>It takes a list of keywords, finds related Facebook brand pages, and renders a list of friends who like that brand.</p>

<p>For cola:</p>

<pre><code>&lt;fb:social-context keywords="cola"&gt;&lt;/fb:social-context&gt;
</code></pre>

<div class="fb-social-context" data-keywords="cola" data-size="large"></div>


<p>or books:</p>

<div class="fb-social-context" data-keywords="books"></div>


<p>Interestingly, the plugin uses the keyword to find the most definitive page for the category. For cola, <a href="http://www.facbeook.com/coca-cola">Coca-Cola</a>, or books, <a href="https://www.facebook.com/pages/Harry-Potter/107641979264998">Harry Potter</a>.</p>

<p>Obviously, the pages returned will depend on your social circle. I&#8217;m not entirely sure of the use case for this yet. Along with keywords, the plugin can use URLs, or a Facebook object_id, although these don&#8217;t appear to show any results.</p>

<p>I&#8217;ll keep exploring the possibilities of this plugin.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Want Button]]></title>
    <link href="http://tomwaddington.github.com/blog/2012/06/27/facebook-want/"/>
    <updated>2012-06-27T21:04:00+01:00</updated>
    <id>http://tomwaddington.github.com/blog/2012/06/27/facebook-want</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://tomwaddington.github.com/images/want_button_2.png" title="Want Button" ></p>

<p>Here&#8217;s an example of the Facebook Want button.</p>

<p>Currently, publishing want actions is disabled, though the button does render.</p>

<pre><code>&lt;fb:want href="..."&gt;&lt;/fb:want&gt;
</code></pre>

<div class="fb-want" data-href="http://tom.waddington.me/facebook/product.html"></div>


<p>The plugin error is</p>

<pre><code>App ... is not allowed to create actions of type product:product.wants for user ...
</code></pre>

<p>It&#8217;s likely Facebook can then built a universal wishlist that could be queried by other apps through the Graph API.</p>

<p>Currently, <a href="https://developers.facebook.com/tools/explorer/5825164839/?method=GET&amp;path=me/wants">querying the me/wants connection</a> on the Graph API shows a blank list, rather than any error.</p>

<p><strong> Update: </strong>
<a href="http://tomwaddington.github.com/blog/2012/06/29/facebook-social-context/">Interested in other unreleased Facebook plugins</a>?</p>

<p><strong> Update 2: </strong>
Facebook have since <a href="https://github.com/tomwaddington/facebook-js-sdk/commit/6e1724cac49c16c0bde19fdfae3532d4c84406ed">removed the code from the SDK</a>. I&#8217;m using an older copy of the code, and the button still works.</p>

<p><strong> Update 3: </strong>
Facebook have disabled the Want button code. I&#8217;ve put up some images of how it looked!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Browsing Facebook Schemas]]></title>
    <link href="http://tomwaddington.github.com/blog/2012/05/25/facebook-schemas/"/>
    <updated>2012-05-25T23:35:00+01:00</updated>
    <id>http://tomwaddington.github.com/blog/2012/05/25/facebook-schemas</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been working a lot with the Facebook Open Graph on <a href="http://www.cutoutandkeep.net">Cut Out + Keep</a> to push favorites, comments and projects back to the Timeline and Ticker. Trying to get it setup isn&#8217;t always straightforward though, so it&#8217;s great to see how larger sites have configured their objects and actions.</p>

<p>If you&#8217;ve worked with adding Open Graph tags to web pages, you might have noticed the <code>prefix="..."</code> attribute to add to the <code>&lt;head&gt;</code> of your page.</p>

<p>What&#8217;s interesting though, is what&#8217;s behind the tags.</p>

<h2>Example</h2>

<pre><code>http://ogp.me/ns/fb/[namespace]
</code></pre>

<p>Will redirect to</p>

<pre><code>http://graph.facebook.com/schema/og/fb/[namespace]  
</code></pre>

<p>At the foot of the document, you&#8217;ll notice:</p>

<pre><code>"subtypes": [
  {
     "describe": "pinner",
     "properties": {
        "following": {...},
        "followers": {...},
        "boards": {...},
        "pins": {...},
        "about": {...}
     }
  },
  {
     "describe": "pinboard",
     "properties": {
        "category": {... },
        "pins": {...},
        "followers": {...},
        "pinner": {...}
     }
  },
  {
     "describe": "pin",
     "properties": {
        "source": {... },
        "price": {...},
        "likes": {...},
        "repins": {...},
        "comments": {...},
        "actions": {...},
        "pinboard": {...},
        "pinner": {...}
     }
  }
 ]
</code></pre>

<p>It&#8217;s a JSON representation of the app&#8217;s Open Graph setup. So, <a href="http://graph.facebook.com/schema/og/fb/pinterestapp">Pinterest&#8217;s OG Schema page</a> shows the pins, boards and pinners that they&#8217;ve set up in the <a href="http://developers.facebook.com/apps">Developer</a> app.</p>

<p>It works for Open Graph actions too - just replace <code>/schema/og</code> with <code>/schema/opengraphaction</code></p>
]]></content>
  </entry>
  
</feed>
